{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unai\\\\webfilm\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport Vplayer from './components/Vplayer';\nimport { render } from 'react-dom';\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition\n\n  useEffect(() => {\n    // if [], run once the row loads, and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n\n  class App2 extends React.Component {\n    constructor() {\n      super();\n\n      this._showMessage = bool => {\n        this.setState({\n          showMessage: bool\n        });\n      };\n\n      this.state = {\n        showMessage: false\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row__posters\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: this._showMessage.bind(null, true),\n            className: `row__poster ${isLargeRow && \"row__posterlogo\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.id\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), this.state.showMessage && /*#__PURE__*/_jsxDEV(\"iframe\", {\n            id: \"bestIframeEver\",\n            title: \"video\",\n            src: `${film_url}${movie.id}`,\n            width: \"25%\",\n            height: \"160\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }\n\n  }\n} //export {Row, Iframe };\n\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/unai/webfilm/src/Row.js"],"names":["React","useState","useEffect","axios","Vplayer","render","ReactDOM","base_url","film_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","App2","Component","constructor","_showMessage","bool","setState","showMessage","state","map","movie","bind","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAGA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEI,SAASC,GAAT,OAA8C;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAiC;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC,CAD0C,CAE1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAea,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AAEH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAWAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AAEA,QAAMS,IAAN,SAAmBtB,KAAK,CAACuB,SAAzB,CAAmC;AAE/BC,IAAAA,WAAW,GAAG;AACZ;;AADY,WAKdC,YALc,GAKEC,IAAD,IAAU;AACvB,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEF;AADD,SAAd;AAGD,OATa;;AAEZ,WAAKG,KAAL,GAAa;AAAED,QAAAA,WAAW,EAAE;AAAf,OAAb;AACD;;AAOLvB,IAAAA,MAAM,GAAI;AACV,0BAEI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA,gCACI;AAAA,oBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKKG,MAAM,CAACiB,GAAP,CAAYC,KAAD,iBACR;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACA;AAEA,YAAA,OAAO,EAAE,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CAFT;AAGA,YAAA,SAAS,EAAG,eAAcpB,UAAU,IAAI,iBAAkB,EAH1D;AAIA,YAAA,GAAG,EAAG,GAAEL,QAAS,GAAEK,UAAU,GAAGmB,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aACxD,EALF;AAMA,YAAA,GAAG,EAAEH,KAAK,CAACI;AANX,aACKJ,KAAK,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,kBADA,EAQC,KAAKN,KAAL,CAAWD,WAAX,iBAA2B;AAAQ,YAAA,EAAE,EAAC,gBAAX;AAA4B,YAAA,KAAK,EAAC,OAAlC;AAA0C,YAAA,GAAG,EAAG,GAAEpB,QAAS,GAAEuB,KAAK,CAACI,EAAG,EAAtE;AAAyE,YAAA,KAAK,EAAC,KAA/E;AAAqF,YAAA,MAAM,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,kBAR5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AA2Ba;;AAxCsB;AA2CtC,C,CAQD;;;GAnES1B,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport Vplayer from './components/Vplayer';\r\nimport { render } from 'react-dom';\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\"\r\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\"\r\n\r\n    function Row({ title, fetchUrl, isLargeRow }) {\r\n        const [movies, setMovies] = useState([]);\r\n        // A snippet of code which runs based on a specific condition\r\n        useEffect(() => {\r\n            // if [], run once the row loads, and dont run again\r\n            async function fetchData() {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n\r\n            }\r\n            fetchData();\r\n        }, [fetchUrl]);\r\n\r\n        console.log(movies);\r\n       \r\n        class App2 extends React.Component {\r\n\r\n            constructor() {\r\n              super(); \r\n              this.state = { showMessage: false }\r\n            }\r\n          \r\n            _showMessage = (bool) => {\r\n              this.setState({\r\n                showMessage: bool\r\n              });\r\n            }\r\n        render () {\r\n        return (\r\n           \r\n            <div className=\"ow\">\r\n                <h2>{title}</h2>\r\n                \r\n                \r\n                \r\n                {movies.map((movie) => (\r\n                    <div className=\"row__posters\">\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={this._showMessage.bind(null, true)}\r\n                    className={`row__poster ${isLargeRow && \"row__posterlogo\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                     }`} \r\n                    alt={movie.id}/>\r\n                    {this.state.showMessage && (<iframe id=\"bestIframeEver\" title='video' src={`${film_url}${movie.id}`} width=\"25%\" height=\"160\"></iframe>)}\r\n                    </div>\r\n                ))}\r\n                \r\n                \r\n                </div>\r\n                \r\n            \r\n            \r\n            \r\n        )\r\n                    }\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    //export {Row, Iframe };\r\n\r\n    export default Row;"]},"metadata":{},"sourceType":"module"}