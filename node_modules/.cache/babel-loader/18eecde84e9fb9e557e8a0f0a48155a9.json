{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unai\\\\webfilm\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition\n\n  useEffect(() => {\n    // if [], run once the row loads, and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n\n  const Page = () => {\n    const redirect = () => {\n      window.location.href = '/anotherPagePath';\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row__posters\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./Vplayer.html\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: `row__poster ${isLargeRow && \"row__posterlogo\"}`,\n              src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n              alt: movie.id\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/unai/webfilm/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","film_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","Page","redirect","window","location","href","map","movie","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEI,SAASC,GAAT,OAA8C;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAiC;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CAD0C,CAE1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AAEH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAWAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AAEA,QAAMS,IAAI,GAAG,MAAM;AACjB,UAAMC,QAAQ,GAAG,MAAM;AACpBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AACF,KAFD;;AAKF,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAA,kBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACCG,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACR;AAAG,YAAA,IAAI,EAAC,gBAAR;AAAA,mCACA;AAEA,cAAA,SAAS,EAAG,eAAchB,UAAU,IAAI,iBAAkB,EAF1D;AAGA,cAAA,GAAG,EAAG,GAAEL,QAAS,GAAEK,UAAU,GAAGgB,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxD,EAJF;AAKA,cAAA,GAAG,EAAEF,KAAK,CAACG;AALX,eACKH,KAAK,CAACG,EADX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBD,GA7BC;AA8BH;;GA9CQtB,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\"\r\n\r\n    function Row({ title, fetchUrl, isLargeRow }) {\r\n        const [movies, setMovies] = useState([]);\r\n        // A snippet of code which runs based on a specific condition\r\n        useEffect(() => {\r\n            // if [], run once the row loads, and dont run again\r\n            async function fetchData() {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n\r\n            }\r\n            fetchData();\r\n        }, [fetchUrl]);\r\n\r\n        console.log(movies);\r\n\r\n        const Page = () => {\r\n          const redirect = () => {\r\n             window.location.href = '/anotherPagePath'\r\n          }\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <h2>{title}</h2>\r\n                <button>\r\n                <div className=\"row__posters\">\r\n                {movies.map((movie) => (\r\n                    <a href=\"./Vplayer.html\">\r\n                    <img \r\n                    key={movie.id}\r\n                    className={`row__poster ${isLargeRow && \"row__posterlogo\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                     }`} \r\n                    alt={movie.id}/>\r\n                    </a>\r\n                    \r\n                ))}\r\n                \r\n                </div>\r\n                </button>\r\n                \r\n            </div>\r\n            \r\n        )\r\n      }\r\n    }\r\n\r\n    export default Row;"]},"metadata":{},"sourceType":"module"}