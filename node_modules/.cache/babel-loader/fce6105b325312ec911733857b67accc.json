{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unai\\\\webfilm\\\\src\\\\Row.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\";\n\nfunction Row(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition\n\n  useEffect(() => {\n    // if [], run once the row loads, and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n\n  function Iframe(_ref2) {\n    _s();\n\n    let {\n      fetchUrl,\n      isLargeRow\n    } = _ref2;\n    const [movies, setMovies] = useState([]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"film\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"iframe\", {\n          id: \"bestIframeEver\",\n          title: \"video\",\n          src: `${film_url}${movie.id}`,\n          width: \"25%\",\n          height: \"160\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this);\n  }\n\n  _s(Iframe, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: Iframe(),\n        className: `row__poster ${isLargeRow && \"row__posterlogo\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.id\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n} //export {Row, Iframe };\n\n\n_s2(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/unai/webfilm/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","film_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","Iframe","map","movie","id","poster_path","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAGA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEI,SAASC,GAAT,OAA8C;AAAA;;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAiC;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CAD0C,CAE1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AAEH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAWAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AACA,WAASS,MAAT,QAA0C;AAAA;;AAAA,QAA1B;AAAEX,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA0B;AACtC,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKS,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACZ;AAAQ,UAAA,EAAE,EAAC,gBAAX;AAA4B,UAAA,KAAK,EAAC,OAAlC;AAA0C,UAAA,GAAG,EAAG,GAAEhB,QAAS,GAAEgB,KAAK,CAACC,EAAG,EAAtE;AAAyE,UAAA,KAAK,EAAC,KAA/E;AAAqF,UAAA,MAAM,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhCyC,KAejCH,MAfiC;;AAmC1C,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAECG,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACR;AAEA,QAAA,OAAO,EAAEF,MAAM,EAFf;AAGA,QAAA,SAAS,EAAG,eAAcV,UAAU,IAAI,iBAAkB,EAH1D;AAIA,QAAA,GAAG,EAAG,GAAEL,QAAS,GAAEK,UAAU,GAAGY,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aACxD,EALF;AAMA,QAAA,GAAG,EAAEH,KAAK,CAACC;AANX,SACKD,KAAK,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,cADH;AAFD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,C,CASD;;;IAhEShB,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\"\r\n\r\n    function Row({ title, fetchUrl, isLargeRow }) {\r\n        const [movies, setMovies] = useState([]);\r\n        // A snippet of code which runs based on a specific condition\r\n        useEffect(() => {\r\n            // if [], run once the row loads, and dont run again\r\n            async function fetchData() {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n\r\n            }\r\n            fetchData();\r\n        }, [fetchUrl]);\r\n\r\n        console.log(movies);\r\n        function Iframe({ fetchUrl, isLargeRow }) {\r\n            const [movies, setMovies] = useState([]);\r\n        \r\n    \r\n    \r\n    \r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"film\">\r\n                        {movies.map((movie) => (\r\n                        <iframe id=\"bestIframeEver\" title='video' src={`${film_url}${movie.id}`} width=\"25%\" height=\"160\"></iframe>\r\n                        ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <h2>{title}</h2>\r\n                \r\n                <div className=\"row__posters\">\r\n                \r\n                {movies.map((movie) => (\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={Iframe()}\r\n                    className={`row__poster ${isLargeRow && \"row__posterlogo\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                     }`} \r\n                    alt={movie.id}/>\r\n                ))}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    //export {Row, Iframe };\r\n\r\n    export default Row;"]},"metadata":{},"sourceType":"module"}