{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unai\\\\webfilm\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport Vplayer from './Vplayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition\n\n  useEffect(() => {\n    // if [], run once the row loads, and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n\n  class App extends React.Component {\n    constructor() {\n      super();\n\n      this._showMessage = bool => {\n        this.setState({\n          showMessage: bool\n        });\n      };\n\n      this.state = {\n        showMessage: false\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row__posters\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster ${isLargeRow && \"row__posterlogo\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.id\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    }\n\n  }\n} //export {Row, Iframe };\n\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/unai/webfilm/src/Row.js"],"names":["React","useState","useEffect","axios","Vplayer","base_url","film_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","App","Component","constructor","_showMessage","bool","setState","showMessage","state","render","map","movie","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEI,SAASC,GAAT,OAA8C;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAiC;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC,CAD0C,CAE1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeW,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AAEH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAaAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AAEA,QAAMS,GAAN,SAAkBpB,KAAK,CAACqB,SAAxB,CAAkC;AAE9BC,IAAAA,WAAW,GAAG;AACZ;;AADY,WAKdC,YALc,GAKEC,IAAD,IAAU;AACvB,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEF;AADD,SAAd;AAGD,OATa;;AAEZ,WAAKG,KAAL,GAAa;AAAED,QAAAA,WAAW,EAAE;AAAf,OAAb;AACD;;AAQDE,IAAAA,MAAM,GAAG;AACL,0BAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,oBAAKpB;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBAECG,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBAER;AAEA,YAAA,SAAS,EAAG,eAAcpB,UAAU,IAAI,iBAAkB,EAF1D;AAGA,YAAA,GAAG,EAAG,GAAEL,QAAS,GAAEK,UAAU,GAAGoB,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxD,EAJF;AAKA,YAAA,GAAG,EAAEF,KAAK,CAACG;AALX,aACKH,KAAK,CAACG,EADX;AAAA;AAAA;AAAA;AAAA,kBAFH;AAFD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAqBH;;AAnC6B;AAwCrC,C,CASD;;;GAnES1B,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport Vplayer from './Vplayer'\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\"\r\n\r\n    function Row({ title, fetchUrl, isLargeRow }) {\r\n        const [movies, setMovies] = useState([]);\r\n        // A snippet of code which runs based on a specific condition\r\n        useEffect(() => {\r\n            // if [], run once the row loads, and dont run again\r\n            async function fetchData() {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n\r\n            }\r\n            fetchData();\r\n        }, [fetchUrl]);\r\n\r\n\r\n    \r\n        console.log(movies);\r\n        \r\n        class App extends React.Component {\r\n\r\n            constructor() {\r\n              super(); \r\n              this.state = { showMessage: false }\r\n            }\r\n          \r\n            _showMessage = (bool) => {\r\n              this.setState({\r\n                showMessage: bool\r\n              });\r\n            }\r\n          \r\n            render() {\r\n                return (\r\n            \r\n                    <div className=\"row\">\r\n                        <h2>{title}</h2>\r\n                        \r\n                        <div className=\"row__posters\">\r\n                        \r\n                        {movies.map((movie) => (\r\n                            \r\n                            <img \r\n                            key={movie.id}\r\n                            className={`row__poster ${isLargeRow && \"row__posterlogo\"}`}\r\n                            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                             }`} \r\n                            alt={movie.id}/>\r\n                        ))}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                )\r\n            }\r\n          }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    //export {Row, Iframe };\r\n\r\n    export default Row;"]},"metadata":{},"sourceType":"module"}