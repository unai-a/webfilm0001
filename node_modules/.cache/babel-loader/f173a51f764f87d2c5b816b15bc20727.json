{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/unai/webfilm00001/webfilm0001/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/unai/webfilm00001/webfilm0001/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\unai\\\\webfilm00001\\\\webfilm0001\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import axios from'./axios';import'./Row.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"https://image.tmdb.org/t/p/original/\";var film_url=\"https://www.2embed.ru/embed/tmdb/movie?id=\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];// A snippet of code which runs based on a specific condition\nuseEffect(function(){// if [], run once the row loads, and dont run again\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);console.log(movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(film_url).concat(movie.id),children:/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterlogo\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.id},movie.id)});})})]});}export default Row;","map":{"version":3,"sources":["C:/Users/unai/webfilm00001/webfilm0001/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","film_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","get","request","data","results","console","log","map","movie","id","poster_path","backdrop_path"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,4CAAjB,CAEI,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,CAC1C,cAA4BR,QAAQ,CAAC,EAAD,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eACA;AACAT,SAAS,CAAC,UAAM,CACZ;AADY,QAEGU,CAAAA,SAFH,qIAEZ,qKAC0BT,CAAAA,KAAK,CAACU,GAAN,CAAUL,QAAV,CAD1B,QACUM,OADV,eAEIH,SAAS,CAACG,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWF,OAHX,wDAFY,4CAQZF,SAAS,GACZ,CATQ,CASN,CAACJ,QAAD,CATM,CAAT,CAWAS,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAEA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKH,KAAL,EADJ,cAGI,YAAK,SAAS,CAAC,cAAf,UAECG,MAAM,CAACS,GAAP,CAAW,SAACC,KAAD,qBACR,UAAG,IAAI,WAAKf,QAAL,SAAgBe,KAAK,CAACC,EAAtB,CAAP,uBACA,YAEA,SAAS,uBAAiBZ,UAAU,EAAI,iBAA/B,CAFT,CAGA,GAAG,WAAKL,QAAL,SAAgBK,UAAU,CAAGW,KAAK,CAACE,WAAT,CAAuBF,KAAK,CAACG,aAAvD,CAHH,CAKA,GAAG,CAAEH,KAAK,CAACC,EALX,EACKD,KAAK,CAACC,EADX,CADA,EADQ,EAAX,CAFD,EAHJ,GADJ,CAuBH,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\nconst film_url = \"https://www.2embed.ru/embed/tmdb/movie?id=\"\n\n    function Row({ title, fetchUrl, isLargeRow }) {\n        const [movies, setMovies] = useState([]);\n        // A snippet of code which runs based on a specific condition\n        useEffect(() => {\n            // if [], run once the row loads, and dont run again\n            async function fetchData() {\n                const request = await axios.get(fetchUrl);\n                setMovies(request.data.results);\n                return request;\n\n            }\n            fetchData();\n        }, [fetchUrl]);\n\n        console.log(movies);\n\n        return (\n            <div className=\"row\">\n                <h2>{title}</h2>\n                \n                <div className=\"row__posters\">\n                \n                {movies.map((movie) => (\n                    <a href={`${film_url}${movie.id}`}>\n                    <img \n                    key={movie.id}\n                    className={`row__poster ${isLargeRow && \"row__posterlogo\"}`}\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                     }`} \n                    alt={movie.id}/>\n                    </a>\n                ))}\n                \n                </div>\n                \n                \n            </div>\n            \n        )\n    }\n\n    export default Row;"]},"metadata":{},"sourceType":"module"}